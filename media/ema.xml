<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>blog/ema</title>
	<atom:link href="http://blog.codiceplastico.com/ema/?feed=rss2" rel="self" type="application/rss+xml" />
	<link>http://blog.codiceplastico.com/ema</link>
	<description>clean coder</description>
	<lastBuildDate>Tue, 09 Aug 2011 08:05:56 +0000</lastBuildDate>
	<language>en</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>http://wordpress.org/?v=3.1.2</generator>
		<item>
		<title>ASP.NET MVC validare un checkbox</title>
		<link>http://blog.codiceplastico.com/ema/?p=98</link>
		<comments>http://blog.codiceplastico.com/ema/?p=98#comments</comments>
		<pubDate>Tue, 09 Aug 2011 08:05:56 +0000</pubDate>
		<dc:creator>ema</dc:creator>
				<category><![CDATA[.NET]]></category>
		<category><![CDATA[ASP.NET MVC]]></category>
		<category><![CDATA[CustomAttribute]]></category>
		<category><![CDATA[Jquery]]></category>
		<category><![CDATA[Validation]]></category>

		<guid isPermaLink="false">http://blog.codiceplastico.com/ema/?p=98</guid>
		<description><![CDATA[Conosciamo tutti gli attributi che possiamo mettere sulle propriet&agrave; di un modello e sappiamo che con ASP.NET MVC 3 abbiamo anche la possibilit&agrave; di usare le regole di validazione client side. Nei giorni scorsi mi è capitato di dover validare un checkbox che doveva essere obbligatorio e mi sono accorto che l&#8217;attributo Required non funzionava, [...]]]></description>
			<content:encoded><![CDATA[<p>Conosciamo tutti gli attributi che possiamo mettere sulle propriet&agrave; di un modello e sappiamo che con ASP.NET MVC 3 abbiamo anche la possibilit&agrave; di usare le regole di validazione client side.</p>
<p>Nei giorni scorsi mi è capitato di dover validare un checkbox che doveva essere obbligatorio e mi sono accorto che l&#8217;attributo Required non funzionava, o meglio, lui funzionava, ero io che non avevo capito la logica che usava.</p>
<p>Quando su una view creo un checkbox tramite @Html.CheckBoxFor(&#8230;) vengono creati due input, uno con valore true e uno con valore false. Questo hack serve per far si che la post invii comunque il valore al server anche se la checkbox non è selezionata (inviando false).</p>
<p>In questo modo un valore al server arriva sempre, quindi il RequiredAttribute, vedendo che il valore c&#8217;è, è soddisfatto e non invalida il modello.</p>
<p>La soluzione è quindi stata quella di creare un nuovo attributo che gestisse questo caso speciale. L&#8217;implementazione è abbastanza semplice, ne riporto uno stralcio:</p>

<div class="wp_syntax"><div class="code"><pre class="csharp" style="font-family:monospace;"><span style="color: #008000;">&#91;</span>AttributeUsage<span style="color: #008000;">&#40;</span>AttributeTargets<span style="color: #008000;">.</span><span style="color: #0000FF;">Field</span> <span style="color: #008000;">|</span> AttributeTargets<span style="color: #008000;">.</span><span style="color: #0000FF;">Property</span>, AllowMultiple <span style="color: #008000;">=</span> <span style="color: #0600FF; font-weight: bold;">false</span><span style="color: #008000;">&#41;</span><span style="color: #008000;">&#93;</span>
<span style="color: #0600FF; font-weight: bold;">public</span> <span style="color: #6666cc; font-weight: bold;">class</span> CheckRequiredAttribute <span style="color: #008000;">:</span> ValidationAttribute, IClientValidatable
<span style="color: #008000;">&#123;</span>
  <span style="color: #0600FF; font-weight: bold;">public</span> CheckRequiredAttribute<span style="color: #008000;">&#40;</span><span style="color: #008000;">&#41;</span>
  <span style="color: #008000;">&#123;</span>
    ErrorMessageResourceName <span style="color: #008000;">=</span> <span style="color: #666666;">&quot;Required&quot;</span><span style="color: #008000;">;</span>
  <span style="color: #008000;">&#125;</span>
  <span style="color: #0600FF; font-weight: bold;">public</span> <span style="color: #0600FF; font-weight: bold;">override</span> <span style="color: #6666cc; font-weight: bold;">bool</span> IsValid<span style="color: #008000;">&#40;</span><span style="color: #6666cc; font-weight: bold;">object</span> value<span style="color: #008000;">&#41;</span>
  <span style="color: #008000;">&#123;</span>
    <span style="color: #008080; font-style: italic;">//  verifico la presenza del valore</span>
  <span style="color: #008000;">&#125;</span>
  <span style="color: #0600FF; font-weight: bold;">public</span> IEnumerable GetClientValidationRules<span style="color: #008000;">&#40;</span>ModelMetadata metadata, ControllerContext context<span style="color: #008000;">&#41;</span>
  <span style="color: #008000;">&#123;</span>
    <span style="color: #0600FF; font-weight: bold;">return</span> <span style="color: #008000;">new</span><span style="color: #008000;">&#91;</span><span style="color: #008000;">&#93;</span> <span style="color: #008000;">&#123;</span> <span style="color: #008000;">new</span> ModelClientValidationRule<span style="color: #008000;">&#40;</span><span style="color: #008000;">&#41;</span> <span style="color: #008000;">&#123;</span> ValidationType <span style="color: #008000;">=</span> <span style="color: #666666;">&quot;checkRequired&quot;</span>, ErrorMessage <span style="color: #008000;">=</span> ErrorMessage <span style="color: #008000;">&#125;</span> <span style="color: #008000;">&#125;</span><span style="color: #008000;">;</span>
  <span style="color: #008000;">&#125;</span>
<span style="color: #008000;">&#125;</span></pre></div></div>

<p>La parte interessante è il metodo GetClientValidationRules che indica il nome delle regole di validazione che dovranno essere aggiunte a jQuery per effettuare la validazione anche lato client.</p>
<p>Lato client va aggiunto questo script:</p>

<div class="wp_syntax"><div class="code"><pre class="javascript" style="font-family:monospace;">$.<span style="color: #660066;">validator</span>.<span style="color: #660066;">addMethod</span><span style="color: #009900;">&#40;</span><span style="color: #3366CC;">&quot;checkRequired&quot;</span><span style="color: #339933;">,</span> <span style="color: #003366; font-weight: bold;">function</span> <span style="color: #009900;">&#40;</span>value<span style="color: #339933;">,</span> element<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
  <span style="color: #000066; font-weight: bold;">return</span> $<span style="color: #009900;">&#40;</span>element<span style="color: #009900;">&#41;</span>.<span style="color: #660066;">attr</span><span style="color: #009900;">&#40;</span><span style="color: #3366CC;">'checked'</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
<span style="color: #009900;">&#125;</span><span style="color: #339933;">,</span> <span style="color: #3366CC;">&quot;*&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
$.<span style="color: #660066;">validator</span>.<span style="color: #660066;">unobtrusive</span>.<span style="color: #660066;">adapters</span>.<span style="color: #660066;">addBool</span><span style="color: #009900;">&#40;</span><span style="color: #3366CC;">'mandatory'</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span></pre></div></div>

<p>In pratica aggiungo una regola agli adatapters la cui logica è implementata nella funzione sopra (che verifica che il checkbox sia &#8220;ceccato&#8221;). Attenzione al nome della regola che è lo stesso indicato nell&#8217;attributo server side.</p>
<p>La costruzione di attributi custom è abbastanza semplice da implementare grazie all&#8217;integrazione di ASP.NET MVC 3 con jQuery.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
]]></content:encoded>
			<wfw:commentRss>http://blog.codiceplastico.com/ema/?feed=rss2&#038;p=98</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Il Sistema Operativo non conta, quello che conta è il WWW</title>
		<link>http://blog.codiceplastico.com/ema/?p=67</link>
		<comments>http://blog.codiceplastico.com/ema/?p=67#comments</comments>
		<pubDate>Wed, 06 Jul 2011 12:03:45 +0000</pubDate>
		<dc:creator>ema</dc:creator>
				<category><![CDATA[.NET]]></category>
		<category><![CDATA[Rant]]></category>

		<guid isPermaLink="false">http://blog.codiceplastico.com/ema/?p=67</guid>
		<description><![CDATA[Il nostro ufficio sta diventando sempre più spesso il punto d&#8217;incontro di professionisti e amici che operano nel settore sviluppo web/nuovi media/social/ecc. Organizziamo spesso serate di discussione molto interessanti in cui idee diverse vengono condivise, discusse, smontate e rimontate. Per me, che da anni lavoro sotto la cupola di Microsoft è anche il momento in [...]]]></description>
			<content:encoded><![CDATA[<p>Il <a href="http://www.codiceplastico.com" target="_blank">nostro</a> ufficio sta diventando sempre più spesso il punto d&#8217;incontro di <a href="http://webdebs.org" target="_blank">professionisti</a> e amici che operano nel settore sviluppo web/nuovi media/social/ecc. Organizziamo spesso serate di discussione molto interessanti in cui idee diverse vengono condivise, discusse, smontate e rimontate. Per me, che da anni lavoro sotto la cupola di Microsoft è anche il momento in cui toccare con mano altri mondi per capire cosa c&#8217;è davvero fuori dalla &#8220;finestra&#8221;.</p>
<div>Ci troviamo ognuno con il proprio dispositivo in mano che va da una strana distribuzione Linux a Mac OS X fino a Windows, Android e tutti condividiamo grazie alle Google Apps i documenti, le slide e le discussioni online.  Questa situazione che possiamo definire &#8220;multietnica-digitale&#8221;, mi ha portato ad una riflessione: che importanza ha oggi il sistema operativo? Nulla, zero.</div>
<div>Mi accorgo che a parte i momenti in cui devo sviluppare un&#8217;applicazione .NET nel restante tempo utilizzo svariati dispositivi per lavorare/documentarmi/giocare ognuno con un suo sistema operativo.&nbsp;</p>
<div>L&#8217;importanza che aveva anni fa si è assottigliata quasi a zero e sempre più spesso l&#8217;unico programma utilizzato è un browser con il quale accedo e uso le mie applicazioni. In altri casi è quasi sempre un&#8217;applicazione client di un&#8217;applicazione web come accade per le app dell&#8217;iPhone.</div>
<div></div>
<div></div>
<div>Cosa vuol dire per noi programmatori?</div>
<div></div>
<div></div>
<div>Che Silverlight sia <em>clinicamente morto</em> mi sembra abbastanza chiaro, scegliere oggi di sviluppare un&#8217;applicazione legata solo ad una specifica piattaforma è quasi sicuramente un suicidio e un&#8217;errata visione del futuro. Sempre più spesso tra i requisiti c&#8217;è la necessit&agrave; di far girare l&#8217;applicazione su Mac OSX perchè il direttore usa un Mac oppure la versione iPad perchè gli agenti usano quello per andare dai clienti.</div>
<div>Quindi la soluzione, e questo Google lo dice da anni, è il web, l&#8217;unica vera lingua franca che mette d&#8217;accordo tutte le piattaforme e, grazie ai nuovi browser che oggi sono delle vere e proprie virtual machine per far girare codice javascript, i limiti del web restano davvero pochi.</div>
<div>Quindi HTML5, Javascript e CSS3 ci supportano benissimo nella realizzazione di applicazioni che possono risultare indistinguibili da una normale applicazione installata sulla propria macchina con il vantaggio di essere  indipendente dalla piattaforma e accessibile ovunque e da qualsiasi client. Certo, noi dev, dobbiamo studiare quella &#8220;roba da designer&#8221; e so che per alcuni amici non è un&#8217;opzione valida (ne riparleremo, io sto studiando).</div>
<div>Altri segnali di questa mia previsione è il mondo OSS che è quasi al 100% legato al web. Oggi si parla tanto di <a href="http://jashkenas.github.com/coffee-script/" target="_blank">CoffeeScript</a>, <a href="http://sass-lang.com/" target="_blank">SASS</a>, <a href="http://lesscss.org/" target="_blank">LessCSS</a>, <a href="http://nodejs.org/" target="_blank">Node.js</a>, <a href="http://documentcloud.github.com/backbone/" target="_blank">Backbone.js</a>, <a href="http://www.sproutcore.com/" target="_blank">Sproutcore</a>, <a href="http://cloud9ide.com/" target="_blank">Cloud9</a>, <a href="http://redis.io/" target="_blank">Redis</a>,&#8230;  tutte tecnologie e strumenti che il programmatore Microsoft non conosce ma che farebbe bene a guardare (e anche di questo ne riparleremo).</div>
<div>Naturalmente questa è la mia visione, quindi vale IMVVHO ma i segni del mercato mi sembrano chiari e che vi piaccia o meno Google e Apple hanno fatto cambiare i piani a Microsoft che si trova oggi ad inseguire con il fiato sempre più corto.</div>
<div></div>
<div></div>
<div>Ma come si dice&#8230;.&#8221;chi vivr&agrave; vedr&agrave;&#8220;</div>
</div>
]]></content:encoded>
			<wfw:commentRss>http://blog.codiceplastico.com/ema/?feed=rss2&#038;p=67</wfw:commentRss>
		<slash:comments>10</slash:comments>
		</item>
		<item>
		<title>Ruby visto da un programmatore C# (pillole) [4]</title>
		<link>http://blog.codiceplastico.com/ema/?p=59</link>
		<comments>http://blog.codiceplastico.com/ema/?p=59#comments</comments>
		<pubDate>Sun, 03 Jul 2011 12:08:18 +0000</pubDate>
		<dc:creator>ema</dc:creator>
				<category><![CDATA[Ruby]]></category>
		<category><![CDATA[c#]]></category>

		<guid isPermaLink="false">http://blog.codiceplastico.com/ema/?p=59</guid>
		<description><![CDATA[Uno dei punti forti di Ruby è la metaprogrammazione resa potente grazie al fatto che Ruby è un linguaggio interpretato e dinamico. Rails ne fa largo uso e molto del magic che fornisce funziona grazie alla metaprogrammazione. Spesso può tornare utile anche nei nostri programmi perchè ci evita di scrivere codice ripetitivo. Supponete di avere [...]]]></description>
			<content:encoded><![CDATA[<div>Uno dei punti forti di Ruby è la metaprogrammazione resa potente grazie al fatto che Ruby è un linguaggio interpretato e dinamico. Rails ne fa largo uso e molto del <em>magic</em> che fornisce funziona grazie alla metaprogrammazione.</div>
<div>Spesso può tornare utile anche nei nostri programmi perchè ci evita di scrivere codice ripetitivo. Supponete di avere la &#8220;solita&#8221; class di settings da esporre alla vostra applicazione:</div>
<div>

<div class="wp_syntax"><div class="code"><pre class="csharp" style="font-family:monospace;"><span style="color: #0600FF; font-weight: bold;">public</span> <span style="color: #6666cc; font-weight: bold;">class</span> Settings
<span style="color: #008000;">&#123;</span>
  <span style="color: #0600FF; font-weight: bold;">public</span> <span style="color: #6666cc; font-weight: bold;">string</span> ApplicationName <span style="color: #008000;">&#123;</span>get<span style="color: #008000;">;</span> set<span style="color: #008000;">;</span><span style="color: #008000;">&#125;</span>
  <span style="color: #0600FF; font-weight: bold;">public</span> <span style="color: #6666cc; font-weight: bold;">int</span> Timeout <span style="color: #008000;">&#123;</span>get<span style="color: #008000;">;</span> set<span style="color: #008000;">;</span><span style="color: #008000;">&#125;</span>
  <span style="color: #008080; font-style: italic;">// ...</span>
  <span style="color: #0600FF; font-weight: bold;">public</span> Settings<span style="color: #008000;">&#40;</span><span style="color: #6666cc; font-weight: bold;">string</span> applicationName, <span style="color: #6666cc; font-weight: bold;">int</span> timeOut<span style="color: #008000;">&#41;</span>
  <span style="color: #008000;">&#123;</span>
    ApplicationName <span style="color: #008000;">=</span> applicationName<span style="color: #008000;">;</span>
    TimeOut <span style="color: #008000;">=</span> timeOut<span style="color: #008000;">;</span>
  <span style="color: #008000;">&#125;</span>
<span style="color: #008000;">&#125;</span></pre></div></div>

<div>
<div>Il codice scritto in C# è ripetitivo e tedioso e non aggiunge grande valore all&#8217;applicazione essendo Settings una classe utility priva di logica.</div>
<div>In Ruby, posso sfruttare la metaprogrammazione per creare a runtime gli attributi necessari all&#8217;applicazione:</div>
<div>

<div class="wp_syntax"><div class="code"><pre class="ruby" style="font-family:monospace;"><span style="color:#9966CC; font-weight:bold;">class</span> Settings
  <span style="color:#9966CC; font-weight:bold;">def</span> initialize<span style="color:#006600; font-weight:bold;">&#40;</span>options<span style="color:#006600; font-weight:bold;">&#41;</span>
    options.<span style="color:#9900CC;">each</span> <span style="color:#9966CC; font-weight:bold;">do</span> <span style="color:#006600; font-weight:bold;">|</span>key, value<span style="color:#006600; font-weight:bold;">|</span>
      <span style="color:#0000FF; font-weight:bold;">self</span>.<span style="color:#9900CC;">instance_variable_set</span> <span style="color:#996600;">&quot;@#{key}&quot;</span>, value
      <span style="color:#0000FF; font-weight:bold;">self</span>.<span style="color:#9966CC; font-weight:bold;">class</span>.<span style="color:#9900CC;">send</span> <span style="color:#ff3333; font-weight:bold;">:define_method</span>, key, <span style="color:#CC0066; font-weight:bold;">proc</span><span style="color:#006600; font-weight:bold;">&#123;</span><span style="color:#0000FF; font-weight:bold;">self</span>.<span style="color:#9900CC;">instance_variable_get</span><span style="color:#006600; font-weight:bold;">&#40;</span><span style="color:#996600;">&quot;@#{key}&quot;</span><span style="color:#006600; font-weight:bold;">&#41;</span><span style="color:#006600; font-weight:bold;">&#125;</span>
      <span style="color:#0000FF; font-weight:bold;">self</span>.<span style="color:#9966CC; font-weight:bold;">class</span>.<span style="color:#9900CC;">send</span> <span style="color:#ff3333; font-weight:bold;">:define_method</span>, <span style="color:#996600;">&quot;#{key}=&quot;</span>,<span style="color:#CC0066; font-weight:bold;">proc</span><span style="color:#006600; font-weight:bold;">&#123;</span><span style="color:#006600; font-weight:bold;">|</span>value<span style="color:#006600; font-weight:bold;">|</span> <span style="color:#0000FF; font-weight:bold;">self</span>.<span style="color:#9900CC;">instance_variable_set</span><span style="color:#006600; font-weight:bold;">&#40;</span><span style="color:#996600;">&quot;@#{key}&quot;</span>, value<span style="color:#006600; font-weight:bold;">&#41;</span><span style="color:#006600; font-weight:bold;">&#125;</span>
    <span style="color:#9966CC; font-weight:bold;">end</span>
  <span style="color:#9966CC; font-weight:bold;">end</span>
<span style="color:#9966CC; font-weight:bold;">end</span></pre></div></div>

<p>Il codice può apparire ai neofiti di ruby molto complesso, in realt&agrave; la complessit&agrave; è dovuta più che altro alla string interpolation (&#8220;@#{key}&#8221; genera la stringa @valoreDellaVariabileKey) ma si tratta di tre righe di codice che rispettivamente impostano il valore della variabile @key a value, e creano il metodo get e il metodo set per leggere e impostare il valore.</p>
<p>In questa classe non c&#8217;è traccia degli attributi ApplicationName e Timeout perchè ogni attributo verr&agrave; definito a runtime tramite il seguente codice:</p>

<div class="wp_syntax"><div class="code"><pre class="ruby" style="font-family:monospace;">c = Settings.<span style="color:#9900CC;">new</span> <span style="color:#ff3333; font-weight:bold;">:application_name</span> =<span style="color:#006600; font-weight:bold;">&amp;</span>gt;<span style="color:#996600;">&quot;bob&quot;</span>, <span style="color:#ff3333; font-weight:bold;">:time_out</span> =<span style="color:#006600; font-weight:bold;">&amp;</span>gt; <span style="color:#006666;">25</span>
<span style="color:#CC0066; font-weight:bold;">puts</span> c.<span style="color:#9900CC;">application_name</span>
<span style="color:#CC0066; font-weight:bold;">puts</span> c.<span style="color:#9900CC;">time_out</span></pre></div></div>

</div>
</div>
</div>
]]></content:encoded>
			<wfw:commentRss>http://blog.codiceplastico.com/ema/?feed=rss2&#038;p=59</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
		<item>
		<title>Test Driving a MVVM App a XeDotNet</title>
		<link>http://blog.codiceplastico.com/ema/?p=54</link>
		<comments>http://blog.codiceplastico.com/ema/?p=54#comments</comments>
		<pubDate>Mon, 13 Jun 2011 07:20:00 +0000</pubDate>
		<dc:creator>ema</dc:creator>
				<category><![CDATA[Talk]]></category>
		<category><![CDATA[MVVM]]></category>
		<category><![CDATA[TDD]]></category>
		<category><![CDATA[WPF]]></category>

		<guid isPermaLink="false">http://blog.codiceplastico.com/ema/?p=54</guid>
		<description><![CDATA[Venerdi scorso sono stato a Mestre dagli amici di XeDotNet per tenere un talk sul Test Driven Development di un&#8217;applicazione MVVM (WPF/Sliverlight). Serata divertentissima, ospite della Community veneta che è sempre molto attiva e ben organizzata e che continua a raccogliere ottimi consensi dai suoi iscritti. La mia sessione è stata molto intensa, poche slide [...]]]></description>
			<content:encoded><![CDATA[<p>Venerdi scorso sono stato a Mestre dagli amici di <a href="http://www.xedotnet.org/">XeDotNet</a> per tenere un talk sul Test Driven Development di un&#8217;applicazione MVVM (WPF/Sliverlight). Serata divertentissima, ospite della Community veneta che è sempre molto attiva e ben organizzata e che continua a raccogliere ottimi consensi dai suoi iscritti.</p>
<p>La mia sessione è stata molto intensa, poche slide introduttive e 2 pomodori di codice per mostrare come funziona veramente il TDD.</p>
<p>Trovate le slide qui: <a href="http://www.slideshare.net/emadb/test-driving-an-mvvm-app">http://www.slideshare.net/emadb/test-driving-an-mvvm-app</a> e il codice completo dell&#8217;applicazione qui: <a href="http://code.google.com/p/wpftodolist/">http://code.google.com/p/wpftodolist/</a></p>
<p>Molto interessante anche la sessione di <a href="http://mircovanini.blogspot.com/">Mirco Vanini</a> sul <a href="http://www.microsoft.com/netmf/default.mspx">Microframework</a>.</p>
]]></content:encoded>
			<wfw:commentRss>http://blog.codiceplastico.com/ema/?feed=rss2&#038;p=54</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
		<item>
		<title>NHibernate e i trigger del SyncFramework</title>
		<link>http://blog.codiceplastico.com/ema/?p=36</link>
		<comments>http://blog.codiceplastico.com/ema/?p=36#comments</comments>
		<pubDate>Wed, 08 Jun 2011 10:19:58 +0000</pubDate>
		<dc:creator>ema</dc:creator>
				<category><![CDATA[.NET]]></category>
		<category><![CDATA[c#]]></category>
		<category><![CDATA[NHibernate]]></category>
		<category><![CDATA[SyncFramework]]></category>

		<guid isPermaLink="false">http://blog.codiceplastico.com/ema/?p=36</guid>
		<description><![CDATA[In una applicazione che stiamo sviluppando siamo ricorsi al Sync Framework di Microsoft per gestire la sincronizzazione di un database SQL Compact con il database principale SQL Server 2008. Non appena installato e configurato il sync framework l&#8217;applicazione web che utilizza sql2008 tramite nhibernate ha cominciato a dare strani e apparentemente ingiustificati errori: [NHibernate.AdoNet.TooManyRowsAffectedException] {"Unexpected row [...]]]></description>
			<content:encoded><![CDATA[<p>In una applicazione che stiamo sviluppando siamo ricorsi al <a href="http://msdn.microsoft.com/en-us/sync/bb736753" target="_blank">Sync Framework</a> di Microsoft per gestire la sincronizzazione di un database SQL Compact con il database principale SQL Server 2008.</p>
<p>Non appena installato e configurato il sync framework l&#8217;applicazione web che utilizza sql2008 tramite nhibernate ha cominciato a dare strani e apparentemente ingiustificati errori:</p>
<pre>[NHibernate.AdoNet.TooManyRowsAffectedException]
{"Unexpected row count: 2; expected: 1"}
NHibernate.AdoNet.TooManyRowsAffectedException</pre>
<p>Dopo un po&#8217; di indagini con il debugger e qualche ricerca su internet sono riuscito a scoprire il problema: il sync framework usa una serie di trigger sulle tabelle da sincronizzare e questi vanno a modificare il numero di &#8220;affected records&#8221; che NHibernate si aspetta a fronte di un update (o di una delete/insert).</p>
<p>La soluzione è facile se si ha controllo sui trigger (<a href="http://blogs.ugidotnet.org/DanBlog/archive/0001/01/01/89701.aspx" target="_blank">daniele ne suggerisce una</a>) ma non essendo io il &#8220;proprietario&#8221; dei trigger non ho potuto applicarla.</p>
<p>Dopo un&#8217;altra sessione di ricerca ho trovato qualche indizio che mi ha portato ad aprire i sorgenti di NHibernate per indagare meglio su come vengono gestite le operazioni di update.</p>
<p>Il punto chiave è la classe SqlClientBatchingBatcher che manda in esecuzione una serie di comandi e verifica che il numero di affected records sia concorde con le attese.</p>
<p>Quindi mi sono messo a riscrivere la classe batcher partendo dalla classe astratta AbstractBatcher e ho implementato un BatchingBatcherWithoutVerification che fa esattamente quello che fa quello di default meno la verifica sugli affected record (se il dafault batcher fosse un po&#8217; più virtual avrei potuto partire dalla sua implementazione&#8230;ma non mi sembra sia possibile).</p>
<p>A questo punto il problema è stato agganciare la nuova classe alla configurazione dell&#8217;applicazione che usa FluentNhibernate per il mapping. Qui la cosa è stata abbastanza semplice, è bastato implementare un paio classi, una IBatcherFactory e un PersistenceConfiguration per poter configurare NHibernate all&#8217;uso del nuovo BatchingBatcherWithoutVerification.</p>
<p>Il codice completo delle modifiche è riportato qui sotto:</p>

<div class="wp_syntax"><div class="code"><pre class="csharp" style="font-family:monospace;"><span style="color: #0600FF; font-weight: bold;">public</span> <span style="color: #6666cc; font-weight: bold;">class</span> BatchingBatcherWithoutVerification <span style="color: #008000;">:</span> AbstractBatcher
<span style="color: #008000;">&#123;</span>
    <span style="color: #0600FF; font-weight: bold;">private</span> <span style="color: #6666cc; font-weight: bold;">int</span> _batchSize<span style="color: #008000;">;</span>
    <span style="color: #0600FF; font-weight: bold;">private</span> <span style="color: #6666cc; font-weight: bold;">int</span> _totalExpectedRowsAffected<span style="color: #008000;">;</span>
    <span style="color: #0600FF; font-weight: bold;">private</span> SqlClientSqlCommandSet _currentBatch<span style="color: #008000;">;</span>
    <span style="color: #0600FF; font-weight: bold;">private</span> StringBuilder _currentBatchCommandsLog<span style="color: #008000;">;</span>
    <span style="color: #0600FF; font-weight: bold;">private</span> <span style="color: #0600FF; font-weight: bold;">readonly</span> <span style="color: #6666cc; font-weight: bold;">int</span> _defaultTimeout<span style="color: #008000;">;</span>
&nbsp;
    <span style="color: #0600FF; font-weight: bold;">public</span> BatchingBatcherWithoutVerification<span style="color: #008000;">&#40;</span>ConnectionManager connectionManager, IInterceptor interceptor<span style="color: #008000;">&#41;</span>
        <span style="color: #008000;">:</span> <span style="color: #0600FF; font-weight: bold;">base</span><span style="color: #008000;">&#40;</span>connectionManager, interceptor<span style="color: #008000;">&#41;</span>
    <span style="color: #008000;">&#123;</span>
        _batchSize <span style="color: #008000;">=</span> Factory<span style="color: #008000;">.</span><span style="color: #0000FF;">Settings</span><span style="color: #008000;">.</span><span style="color: #0000FF;">AdoBatchSize</span><span style="color: #008000;">;</span>
        _defaultTimeout <span style="color: #008000;">=</span> PropertiesHelper<span style="color: #008000;">.</span><span style="color: #0000FF;">GetInt32</span><span style="color: #008000;">&#40;</span>NHibernate<span style="color: #008000;">.</span><span style="color: #0000FF;">Cfg</span><span style="color: #008000;">.</span><span style="color: #0000FF;">Environment</span><span style="color: #008000;">.</span><span style="color: #0000FF;">CommandTimeout</span>, NHibernate<span style="color: #008000;">.</span><span style="color: #0000FF;">Cfg</span><span style="color: #008000;">.</span><span style="color: #0000FF;">Environment</span><span style="color: #008000;">.</span><span style="color: #0000FF;">Properties</span>, <span style="color: #008000;">-</span><span style="color: #FF0000;">1</span><span style="color: #008000;">&#41;</span><span style="color: #008000;">;</span>
&nbsp;
        _currentBatch <span style="color: #008000;">=</span> CreateConfiguredBatch<span style="color: #008000;">&#40;</span><span style="color: #008000;">&#41;</span><span style="color: #008000;">;</span>
        _currentBatchCommandsLog <span style="color: #008000;">=</span> <span style="color: #008000;">new</span> StringBuilder<span style="color: #008000;">&#40;</span><span style="color: #008000;">&#41;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">AppendLine</span><span style="color: #008000;">&#40;</span><span style="color: #666666;">&quot;Batch commands:&quot;</span><span style="color: #008000;">&#41;</span><span style="color: #008000;">;</span>
    <span style="color: #008000;">&#125;</span>
&nbsp;
    <span style="color: #0600FF; font-weight: bold;">public</span> <span style="color: #0600FF; font-weight: bold;">override</span> <span style="color: #6666cc; font-weight: bold;">int</span> BatchSize
    <span style="color: #008000;">&#123;</span>
        get <span style="color: #008000;">&#123;</span> <span style="color: #0600FF; font-weight: bold;">return</span> _batchSize<span style="color: #008000;">;</span> <span style="color: #008000;">&#125;</span>
        set <span style="color: #008000;">&#123;</span> _batchSize <span style="color: #008000;">=</span> value<span style="color: #008000;">;</span> <span style="color: #008000;">&#125;</span>
    <span style="color: #008000;">&#125;</span>
&nbsp;
    <span style="color: #0600FF; font-weight: bold;">protected</span> <span style="color: #0600FF; font-weight: bold;">override</span> <span style="color: #6666cc; font-weight: bold;">int</span> CountOfStatementsInCurrentBatch
    <span style="color: #008000;">&#123;</span>
        get <span style="color: #008000;">&#123;</span> <span style="color: #0600FF; font-weight: bold;">return</span> _currentBatch<span style="color: #008000;">.</span><span style="color: #0000FF;">CountOfCommands</span><span style="color: #008000;">;</span> <span style="color: #008000;">&#125;</span>
    <span style="color: #008000;">&#125;</span>
&nbsp;
    <span style="color: #0600FF; font-weight: bold;">public</span> <span style="color: #0600FF; font-weight: bold;">override</span> <span style="color: #6666cc; font-weight: bold;">void</span> AddToBatch<span style="color: #008000;">&#40;</span>IExpectation expectation<span style="color: #008000;">&#41;</span>
    <span style="color: #008000;">&#123;</span>
        _totalExpectedRowsAffected <span style="color: #008000;">+=</span> expectation<span style="color: #008000;">.</span><span style="color: #0000FF;">ExpectedRowCount</span><span style="color: #008000;">;</span>
        IDbCommand batchUpdate <span style="color: #008000;">=</span> CurrentCommand<span style="color: #008000;">;</span>
&nbsp;
        <span style="color: #6666cc; font-weight: bold;">string</span> lineWithParameters <span style="color: #008000;">=</span> <span style="color: #0600FF; font-weight: bold;">null</span><span style="color: #008000;">;</span>
        var sqlStatementLogger <span style="color: #008000;">=</span> Factory<span style="color: #008000;">.</span><span style="color: #0000FF;">Settings</span><span style="color: #008000;">.</span><span style="color: #0000FF;">SqlStatementLogger</span><span style="color: #008000;">;</span>
        <span style="color: #0600FF; font-weight: bold;">if</span> <span style="color: #008000;">&#40;</span>sqlStatementLogger<span style="color: #008000;">.</span><span style="color: #0000FF;">IsDebugEnabled</span> <span style="color: #008000;">||</span> log<span style="color: #008000;">.</span><span style="color: #0000FF;">IsDebugEnabled</span><span style="color: #008000;">&#41;</span>
        <span style="color: #008000;">&#123;</span>
            lineWithParameters <span style="color: #008000;">=</span> sqlStatementLogger<span style="color: #008000;">.</span><span style="color: #0000FF;">GetCommandLineWithParameters</span><span style="color: #008000;">&#40;</span>batchUpdate<span style="color: #008000;">&#41;</span><span style="color: #008000;">;</span>
            var formatStyle <span style="color: #008000;">=</span> sqlStatementLogger<span style="color: #008000;">.</span><span style="color: #0000FF;">DetermineActualStyle</span><span style="color: #008000;">&#40;</span>FormatStyle<span style="color: #008000;">.</span><span style="color: #0000FF;">Basic</span><span style="color: #008000;">&#41;</span><span style="color: #008000;">;</span>
            lineWithParameters <span style="color: #008000;">=</span> formatStyle<span style="color: #008000;">.</span><span style="color: #0000FF;">Formatter</span><span style="color: #008000;">.</span><span style="color: #0000FF;">Format</span><span style="color: #008000;">&#40;</span>lineWithParameters<span style="color: #008000;">&#41;</span><span style="color: #008000;">;</span>
            _currentBatchCommandsLog<span style="color: #008000;">.</span><span style="color: #0000FF;">Append</span><span style="color: #008000;">&#40;</span><span style="color: #666666;">&quot;command &quot;</span><span style="color: #008000;">&#41;</span>
                <span style="color: #008000;">.</span><span style="color: #0000FF;">Append</span><span style="color: #008000;">&#40;</span>_currentBatch<span style="color: #008000;">.</span><span style="color: #0000FF;">CountOfCommands</span><span style="color: #008000;">&#41;</span>
                <span style="color: #008000;">.</span><span style="color: #0000FF;">Append</span><span style="color: #008000;">&#40;</span><span style="color: #666666;">&quot;:&quot;</span><span style="color: #008000;">&#41;</span>
                <span style="color: #008000;">.</span><span style="color: #0000FF;">AppendLine</span><span style="color: #008000;">&#40;</span>lineWithParameters<span style="color: #008000;">&#41;</span><span style="color: #008000;">;</span>
        <span style="color: #008000;">&#125;</span>
        <span style="color: #0600FF; font-weight: bold;">if</span> <span style="color: #008000;">&#40;</span>log<span style="color: #008000;">.</span><span style="color: #0000FF;">IsDebugEnabled</span><span style="color: #008000;">&#41;</span>
        <span style="color: #008000;">&#123;</span>
            log<span style="color: #008000;">.</span><span style="color: #0000FF;">Debug</span><span style="color: #008000;">&#40;</span><span style="color: #666666;">&quot;Adding to batch:&quot;</span> <span style="color: #008000;">+</span> lineWithParameters<span style="color: #008000;">&#41;</span><span style="color: #008000;">;</span>
        <span style="color: #008000;">&#125;</span>
        _currentBatch<span style="color: #008000;">.</span><span style="color: #0000FF;">Append</span><span style="color: #008000;">&#40;</span><span style="color: #008000;">&#40;</span><span style="color: #000000;">System.<span style="color: #0000FF;">Data</span></span><span style="color: #008000;">.</span><span style="color: #0000FF;">SqlClient</span><span style="color: #008000;">.</span><span style="color: #0000FF;">SqlCommand</span><span style="color: #008000;">&#41;</span> batchUpdate<span style="color: #008000;">&#41;</span><span style="color: #008000;">;</span>
&nbsp;
        <span style="color: #0600FF; font-weight: bold;">if</span> <span style="color: #008000;">&#40;</span>_currentBatch<span style="color: #008000;">.</span><span style="color: #0000FF;">CountOfCommands</span> <span style="color: #008000;">&amp;</span>gt<span style="color: #008000;">;=</span> _batchSize<span style="color: #008000;">&#41;</span>
        <span style="color: #008000;">&#123;</span>
            ExecuteBatchWithTiming<span style="color: #008000;">&#40;</span>batchUpdate<span style="color: #008000;">&#41;</span><span style="color: #008000;">;</span>
        <span style="color: #008000;">&#125;</span>
    <span style="color: #008000;">&#125;</span>
&nbsp;
    <span style="color: #0600FF; font-weight: bold;">protected</span> <span style="color: #0600FF; font-weight: bold;">override</span> <span style="color: #6666cc; font-weight: bold;">void</span> DoExecuteBatch<span style="color: #008000;">&#40;</span>IDbCommand ps<span style="color: #008000;">&#41;</span>
    <span style="color: #008000;">&#123;</span>
        log<span style="color: #008000;">.</span><span style="color: #0000FF;">DebugFormat</span><span style="color: #008000;">&#40;</span><span style="color: #666666;">&quot;Executing batch&quot;</span><span style="color: #008000;">&#41;</span><span style="color: #008000;">;</span>
        CheckReaders<span style="color: #008000;">&#40;</span><span style="color: #008000;">&#41;</span><span style="color: #008000;">;</span>
        Prepare<span style="color: #008000;">&#40;</span>_currentBatch<span style="color: #008000;">.</span><span style="color: #0000FF;">BatchCommand</span><span style="color: #008000;">&#41;</span><span style="color: #008000;">;</span>
        <span style="color: #0600FF; font-weight: bold;">if</span> <span style="color: #008000;">&#40;</span>Factory<span style="color: #008000;">.</span><span style="color: #0000FF;">Settings</span><span style="color: #008000;">.</span><span style="color: #0000FF;">SqlStatementLogger</span><span style="color: #008000;">.</span><span style="color: #0000FF;">IsDebugEnabled</span><span style="color: #008000;">&#41;</span>
        <span style="color: #008000;">&#123;</span>
            Factory<span style="color: #008000;">.</span><span style="color: #0000FF;">Settings</span><span style="color: #008000;">.</span><span style="color: #0000FF;">SqlStatementLogger</span><span style="color: #008000;">.</span><span style="color: #0000FF;">LogBatchCommand</span><span style="color: #008000;">&#40;</span>_currentBatchCommandsLog<span style="color: #008000;">.</span><span style="color: #0000FF;">ToString</span><span style="color: #008000;">&#40;</span><span style="color: #008000;">&#41;</span><span style="color: #008000;">&#41;</span><span style="color: #008000;">;</span>
            _currentBatchCommandsLog <span style="color: #008000;">=</span> <span style="color: #008000;">new</span> StringBuilder<span style="color: #008000;">&#40;</span><span style="color: #008000;">&#41;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">AppendLine</span><span style="color: #008000;">&#40;</span><span style="color: #666666;">&quot;Batch commands:&quot;</span><span style="color: #008000;">&#41;</span><span style="color: #008000;">;</span>
        <span style="color: #008000;">&#125;</span>
&nbsp;
        <span style="color: #6666cc; font-weight: bold;">int</span> rowsAffected<span style="color: #008000;">;</span>
        <span style="color: #0600FF; font-weight: bold;">try</span>
        <span style="color: #008000;">&#123;</span>
            rowsAffected <span style="color: #008000;">=</span> _currentBatch<span style="color: #008000;">.</span><span style="color: #0000FF;">ExecuteNonQuery</span><span style="color: #008000;">&#40;</span><span style="color: #008000;">&#41;</span><span style="color: #008000;">;</span>
        <span style="color: #008000;">&#125;</span>
        <span style="color: #0600FF; font-weight: bold;">catch</span> <span style="color: #008000;">&#40;</span>DbException e<span style="color: #008000;">&#41;</span>
        <span style="color: #008000;">&#123;</span>
            <span style="color: #0600FF; font-weight: bold;">throw</span> ADOExceptionHelper<span style="color: #008000;">.</span><span style="color: #0000FF;">Convert</span><span style="color: #008000;">&#40;</span>Factory<span style="color: #008000;">.</span><span style="color: #0000FF;">SQLExceptionConverter</span>, e, <span style="color: #666666;">&quot;could not execute batch command.&quot;</span><span style="color: #008000;">&#41;</span><span style="color: #008000;">;</span>
        <span style="color: #008000;">&#125;</span>
&nbsp;
        <span style="color: #008080; font-style: italic;">// EMA: Disabilito il check del count</span>
        <span style="color: #008080; font-style: italic;">//Expectations.VerifyOutcomeBatched(totalExpectedRowsAffected, rowsAffected);</span>
&nbsp;
        _currentBatch<span style="color: #008000;">.</span><span style="color: #0000FF;">Dispose</span><span style="color: #008000;">&#40;</span><span style="color: #008000;">&#41;</span><span style="color: #008000;">;</span>
        _totalExpectedRowsAffected <span style="color: #008000;">=</span> <span style="color: #FF0000;">0</span><span style="color: #008000;">;</span>
        _currentBatch <span style="color: #008000;">=</span> CreateConfiguredBatch<span style="color: #008000;">&#40;</span><span style="color: #008000;">&#41;</span><span style="color: #008000;">;</span>
    <span style="color: #008000;">&#125;</span>
&nbsp;
    <span style="color: #0600FF; font-weight: bold;">private</span> SqlClientSqlCommandSet CreateConfiguredBatch<span style="color: #008000;">&#40;</span><span style="color: #008000;">&#41;</span>
    <span style="color: #008000;">&#123;</span>
        var result <span style="color: #008000;">=</span> <span style="color: #008000;">new</span> SqlClientSqlCommandSet<span style="color: #008000;">&#40;</span><span style="color: #008000;">&#41;</span><span style="color: #008000;">;</span>
        <span style="color: #0600FF; font-weight: bold;">if</span> <span style="color: #008000;">&#40;</span>_defaultTimeout <span style="color: #008000;">&amp;</span>gt<span style="color: #008000;">;</span> <span style="color: #FF0000;">0</span><span style="color: #008000;">&#41;</span>
        <span style="color: #008000;">&#123;</span>
            <span style="color: #0600FF; font-weight: bold;">try</span>
            <span style="color: #008000;">&#123;</span>
                result<span style="color: #008000;">.</span><span style="color: #0000FF;">CommandTimeout</span> <span style="color: #008000;">=</span> _defaultTimeout<span style="color: #008000;">;</span>
            <span style="color: #008000;">&#125;</span>
            <span style="color: #0600FF; font-weight: bold;">catch</span> <span style="color: #008000;">&#40;</span>Exception e<span style="color: #008000;">&#41;</span>
            <span style="color: #008000;">&#123;</span>
                <span style="color: #0600FF; font-weight: bold;">if</span> <span style="color: #008000;">&#40;</span>log<span style="color: #008000;">.</span><span style="color: #0000FF;">IsWarnEnabled</span><span style="color: #008000;">&#41;</span>
                <span style="color: #008000;">&#123;</span>
                    log<span style="color: #008000;">.</span><span style="color: #0000FF;">Warn</span><span style="color: #008000;">&#40;</span>e<span style="color: #008000;">.</span><span style="color: #0000FF;">ToString</span><span style="color: #008000;">&#40;</span><span style="color: #008000;">&#41;</span><span style="color: #008000;">&#41;</span><span style="color: #008000;">;</span>
                <span style="color: #008000;">&#125;</span>
            <span style="color: #008000;">&#125;</span>
        <span style="color: #008000;">&#125;</span>
&nbsp;
        <span style="color: #0600FF; font-weight: bold;">return</span> result<span style="color: #008000;">;</span>
    <span style="color: #008000;">&#125;</span>
<span style="color: #008000;">&#125;</span>
&nbsp;
<span style="color: #0600FF; font-weight: bold;">public</span> <span style="color: #6666cc; font-weight: bold;">class</span> DriverWithCustomBatcherFactory <span style="color: #008000;">:</span> SqlClientDriver, IEmbeddedBatcherFactoryProvider
<span style="color: #008000;">&#123;</span>
    Type IEmbeddedBatcherFactoryProvider<span style="color: #008000;">.</span><span style="color: #0000FF;">BatcherFactoryClass</span>
    <span style="color: #008000;">&#123;</span>
        get <span style="color: #008000;">&#123;</span> <span style="color: #0600FF; font-weight: bold;">return</span> <span style="color: #008000;">typeof</span><span style="color: #008000;">&#40;</span>MyCustomClientBatchingBatcherFactory<span style="color: #008000;">&#41;</span><span style="color: #008000;">;</span> <span style="color: #008000;">&#125;</span>
    <span style="color: #008000;">&#125;</span>
<span style="color: #008000;">&#125;</span>
&nbsp;
<span style="color: #0600FF; font-weight: bold;">public</span> <span style="color: #6666cc; font-weight: bold;">class</span> MyCustomClientBatchingBatcherFactory <span style="color: #008000;">:</span> IBatcherFactory
<span style="color: #008000;">&#123;</span>
    <span style="color: #0600FF; font-weight: bold;">public</span> <span style="color: #0600FF; font-weight: bold;">virtual</span> IBatcher CreateBatcher<span style="color: #008000;">&#40;</span>ConnectionManager connectionManager, IInterceptor interceptor<span style="color: #008000;">&#41;</span>
    <span style="color: #008000;">&#123;</span>
        <span style="color: #0600FF; font-weight: bold;">return</span> <span style="color: #008000;">new</span> BatchingBatcherWithoutVerification<span style="color: #008000;">&#40;</span>connectionManager, interceptor<span style="color: #008000;">&#41;</span><span style="color: #008000;">;</span>
    <span style="color: #008000;">&#125;</span>
<span style="color: #008000;">&#125;</span>
&nbsp;
<span style="color: #0600FF; font-weight: bold;">public</span> <span style="color: #6666cc; font-weight: bold;">class</span> MyCustomSqlConfiguration <span style="color: #008000;">:</span> PersistenceConfiguration
<span style="color: #008000;">&#123;</span>
    MyCustomSqlConfiguration<span style="color: #008000;">&#40;</span><span style="color: #008000;">&#41;</span>
    <span style="color: #008000;">&#123;</span>
        Driver<span style="color: #008000;">&#40;</span><span style="color: #008000;">&#41;</span><span style="color: #008000;">;</span>
        AdoNetBatchSize<span style="color: #008000;">&#40;</span><span style="color: #FF0000;">1</span><span style="color: #008000;">&#41;</span><span style="color: #008000;">;</span>
    <span style="color: #008000;">&#125;</span>
&nbsp;
    <span style="color: #0600FF; font-weight: bold;">public</span> <span style="color: #0600FF; font-weight: bold;">static</span> MyCustomConfiguration Sql2008Dialect
    <span style="color: #008000;">&#123;</span>
        get
        <span style="color: #008000;">&#123;</span>
            <span style="color: #0600FF; font-weight: bold;">return</span> <span style="color: #008000;">new</span> MyCustomConfiguration<span style="color: #008000;">&#40;</span><span style="color: #008000;">&#41;</span>
                <span style="color: #008000;">.</span><span style="color: #0000FF;">Dialect</span> <span style="color: #008000;">&#40;</span><span style="color: #008000;">&#41;</span><span style="color: #008000;">;</span>
        <span style="color: #008000;">&#125;</span>
    <span style="color: #008000;">&#125;</span></pre></div></div>

<p>}</p>
<p><span style="font-family: Consolas, Monaco, 'Courier New', Courier, monospace; font-size: small;"><span style="font-size: 12px; line-height: 18px; white-space: pre;"><span style="font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: small;"><span style="font-size: 13px; line-height: 19px; white-space: normal;"><br />
</span></span></span></span></p>
]]></content:encoded>
			<wfw:commentRss>http://blog.codiceplastico.com/ema/?feed=rss2&#038;p=36</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Ruby visto da un programmatore C# (pillole) [3]</title>
		<link>http://blog.codiceplastico.com/ema/?p=32</link>
		<comments>http://blog.codiceplastico.com/ema/?p=32#comments</comments>
		<pubDate>Wed, 01 Jun 2011 09:08:05 +0000</pubDate>
		<dc:creator>ema</dc:creator>
				<category><![CDATA[Ruby]]></category>
		<category><![CDATA[c#]]></category>

		<guid isPermaLink="false">http://blog.codiceplastico.com/ema/?p=32</guid>
		<description><![CDATA[Come gi&agrave; detto più volte Ruby è un linguaggio interpretato e ogni riga di codice scritta viene di fatto eseguita dal runtime. Questo vale anche per le definizioni delle classi che possono quindi sfruttare questo aspetto per migliorare la leggibilit&agrave; rimanendo comunque sintetiche. Un esempio lampante è la definizione degli attributi di una classe. Ruby [...]]]></description>
			<content:encoded><![CDATA[<div>Come gi&agrave; detto più volte Ruby è un linguaggio interpretato e ogni riga di codice scritta viene di fatto eseguita dal runtime. Questo vale anche per le definizioni delle classi che possono quindi sfruttare questo aspetto per migliorare la leggibilit&agrave; rimanendo comunque sintetiche.</div>
<div>Un esempio lampante è la definizione degli attributi di una classe. Ruby non ha il concetto di Propriet&agrave; come C# ma permette di definire un metodo get e un metodo set per impostare il valore di una variabile d&#8217;istanza. Questo può essere fatto tramite la chiamata ad un metodo:</div>

<div class="wp_syntax"><div class="code"><pre class="ruby" style="font-family:monospace;"><span style="color:#9966CC; font-weight:bold;">class</span> Person
  attr_accessor <span style="color:#ff3333; font-weight:bold;">:name</span>
<span style="color:#9966CC; font-weight:bold;">end</span></pre></div></div>

<div>attr_accessor è un metodo che riceve in ingresso i nomi (sotto forma di simboli) degli attributi da definire. Quando il runtime esegue quella riga di codice attr_accessor tramite metaprogrammazione va ad aggiungere alla classe il seguente codice:</div>
<div>

<div class="wp_syntax"><div class="code"><pre class="ruby" style="font-family:monospace;"><span style="color:#9966CC; font-weight:bold;">def</span> name
  <span style="color:#0066ff; font-weight:bold;">@name</span>
<span style="color:#9966CC; font-weight:bold;">end</span>
<span style="color:#9966CC; font-weight:bold;">def</span> name=<span style="color:#006600; font-weight:bold;">&#40;</span>val<span style="color:#006600; font-weight:bold;">&#41;</span>
  <span style="color:#0066ff; font-weight:bold;">@name</span> = val
<span style="color:#9966CC; font-weight:bold;">end</span></pre></div></div>

</div>
<p>Il risultato è un simile a quello che si ottiene con le autoproperty di C# 3 con la differenza che in C# è il compilatore che genera gli accessor a compile time, in ruby invece vengono generati a runtime quando viene eseguito il codice.</p>
<p>Altra cosa interessante, sul quale torneremo è la definizione estesa dell&#8217;attributo &#8220;set&#8221; fatta tramite l&#8217;implementazione del metodo &#8220;=&#8221;&#8230;in ruby non esistono &#8220;cose speciali&#8221; e &#8220;=&#8221; , &#8220;+&#8221;, ecc&#8230;possono essere usati come nome di un metodo :-)</p>
<p>&nbsp;</p>
]]></content:encoded>
			<wfw:commentRss>http://blog.codiceplastico.com/ema/?feed=rss2&#038;p=32</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
		<item>
		<title>XeDotNet: Test Driving a MVVM Application</title>
		<link>http://blog.codiceplastico.com/ema/?p=23</link>
		<comments>http://blog.codiceplastico.com/ema/?p=23#comments</comments>
		<pubDate>Wed, 25 May 2011 20:20:26 +0000</pubDate>
		<dc:creator>ema</dc:creator>
				<category><![CDATA[Talk]]></category>
		<category><![CDATA[MVVM]]></category>
		<category><![CDATA[TDD]]></category>

		<guid isPermaLink="false">http://blog.codiceplastico.com/ema/?p=23</guid>
		<description><![CDATA[Il prossimo 10 giugno sarò a Mestre dagli amici di XeDotNet dove terrò un talk sulla realizzazione di un&#8217;applicazione WPF con Model View ViewModel completamente in TDD. Durante la sessione vedremo poche slide e molto codice live con il quale realizzeremo una semplice applicazione completamente in TDD. Uno dei punti forti del pattern MVVM sta [...]]]></description>
			<content:encoded><![CDATA[<p>Il prossimo 10 giugno sarò a Mestre dagli amici di <a href="http://www.xedotnet.org/" target="_blank">XeDotNet</a> dove terrò un talk sulla realizzazione di un&#8217;applicazione WPF con Model View ViewModel completamente in TDD.</p>
<p>Durante la sessione vedremo poche slide e molto codice live con il quale realizzeremo una semplice applicazione completamente in TDD.</p>
<p>Uno dei punti forti del pattern MVVM sta nel fatto che i due elementi View e Viewmodel sono ortogonali tra loro e possono essere implementati in modo indipendente. Infatti vedremo che test dopo test andremo a definire dettagliatamente il Viewmodel senza occuparci della view che potr&agrave; essere &#8220;montata&#8221; sul VM alla fine della sua implementazione.</p>
<p>Quindi durante la costruzione del ViewModel l&#8217;unico nostro feedback sar&agrave; la barra verde dei test. Niente F5. Niente debugger. Tanto ritmo.</p>
<p>Le informazioni logistiche per raggiungere la sede dell&#8217;evento e per iscrivervi sono <a href="http://www.xedotnet.org/Home/Meeting/20110610" target="_blank">qui</a>.</p>
]]></content:encoded>
			<wfw:commentRss>http://blog.codiceplastico.com/ema/?feed=rss2&#038;p=23</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
		<item>
		<title>Build con Rake</title>
		<link>http://blog.codiceplastico.com/ema/?p=17</link>
		<comments>http://blog.codiceplastico.com/ema/?p=17#comments</comments>
		<pubDate>Thu, 19 May 2011 20:08:21 +0000</pubDate>
		<dc:creator>ema</dc:creator>
				<category><![CDATA[Ruby]]></category>
		<category><![CDATA[CI]]></category>

		<guid isPermaLink="false">http://blog.codiceplastico.com/ema/?p=17</guid>
		<description><![CDATA[Per parecchi anni abbiamo usato NANT e successivamente MSBuild per effettuare le build dei nostri progetti e per parecchi anni ho odiato l&#8217;XML per la sua &#8220;prolissit&agrave;&#8221; e per la poca manutenibilit&agrave;. Quante build rotte a causa di un tag non chiuso, di una variabile scritta male, di un doppio apice dimenticato&#8230;. Nel nostro ultimo [...]]]></description>
			<content:encoded><![CDATA[<p>Per parecchi anni abbiamo usato <a href="http://nant.sourceforge.net/" target="_blank">NANT</a> e successivamente <a href="http://msdn.microsoft.com/en-us/library/ms171452(v=vs.90).aspx" target="_blank">MSBuild</a> per effettuare le build dei nostri progetti e per parecchi anni ho odiato l&#8217;XML per la sua &#8220;prolissit&agrave;&#8221; e per la poca manutenibilit&agrave;. Quante build rotte a causa di un tag non chiuso, di una variabile scritta male, di un doppio apice dimenticato&#8230;.</p>
<p>Nel nostro ultimo progetto abbiamo fatto piazza pulita e siamo ripartiti da zero con <a href="http://rake.rubyforge.org/" target="_blank">rake</a> per provare qualcosa di diverso. Fin da subito i vantaggi sono stati notevoli.</p>
<p>Primo tra tutti il fatto di avere un vero linguaggio di programmazione (ad oggetti) per scrivere i vari task della build che portano ad un notevole aumento della leggibilit&agrave;.</p>
<p>Secondo, l&#8217;uso di <a href="http://www.ironruby.net/" target="_blank">IronRuby</a>, come interprete ci permette, qualora servisse, di avere una completa interoperabilit&agrave; con il .NET framework accedendo direttamente agli assembly generati per estrarre informazioni o per modificarli.</p>
<p>Al momento, siamo alla prima versione, il nostro file di build contiene i seguenti task:</p>
<ul>
<li>compilazione del progetto con MSBuild</li>
<li>allineamento del database tramite <a href="http://code.google.com/p/tarantino/" target="_blank">Tarantino</a></li>
<li>compilazione delle viste (utilissimo)</li>
<li>esecuzione unit test con <a href="http://xunit.codeplex.com" target="_blank">xUnit.net</a></li>
<li>esecuzione test integrazione con xUnit.net</li>
<li>calcolo delle metriche con <a href="http://www.campwoodsw.com/sourcemonitor.html" target="_blank">SourceMonitor</a></li>
<li>copia del progetto nella cartella per il deploy</li>
</ul>
<p>Inoltre ci sono un paio di task per chi non ha ancora il database che si occupano di creare il db e gli utenti necessari all&#8217;applicazione.<br />
Il rakefile è su SVN e ogni membro del team (siamo in 3) ha installato IronRuby sulla propria macchina con la gemma rake.L&#8217;esecuzione avviene tramite riga di comando e nei prossimi giorni verr&agrave; integrato sul server di CI (TeamCity) cosi che il processo venga automatizzato.<br />
Agli interessati, riporto di seguito il rakefile che stiamo utilizzando:</p>

<div class="wp_syntax"><div class="code"><pre class="ruby" style="font-family:monospace;"><span style="color:#CC0066; font-weight:bold;">require</span> <span style="color:#996600;">'rake/clean'</span><span style="color:#006600; font-weight:bold;">&lt;/</span>span<span style="color:#006600; font-weight:bold;">&gt;</span>
<span style="color:#008000; font-style:italic;"># project variables</span>
DOT_NET_PATH = <span style="color:#996600;">&quot;#{ENV[&quot;</span>SystemRoot<span style="color:#996600;">&quot;]}<span style="color:#000099;">\\</span>Microsoft.NET<span style="color:#000099;">\\</span>Framework<span style="color:#000099;">\\</span>v4.0.30319&quot;</span>
XUNIT_EXE = <span style="color:#996600;">&quot;xunit.console.clr4.exe&quot;</span>
SOURCE_PATH = <span style="color:#996600;">&quot;../src&quot;</span>
OUTPUT_PATH = <span style="color:#996600;">&quot;output&quot;</span>
CONFIG = <span style="color:#996600;">&quot;Debug&quot;</span>
DEPLOY_PATH = <span style="color:#996600;">&quot;./archive&quot;</span>
DATABASE_SERVER = <span style="color:#996600;">&quot;localhost&quot;</span>
DATABASE_NAME = <span style="color:#996600;">&quot;####&quot;</span>
&nbsp;
CLEAN.<span style="color:#9966CC; font-weight:bold;">include</span><span style="color:#006600; font-weight:bold;">&#40;</span>OUTPUT_PATH<span style="color:#006600; font-weight:bold;">&#41;</span>
&nbsp;
<span style="color:#008000; font-style:italic;"># Tasks</span>
task <span style="color:#ff3333; font-weight:bold;">:default</span> =<span style="color:#006600; font-weight:bold;">&amp;</span>gt; <span style="color:#006600; font-weight:bold;">&#91;</span><span style="color:#ff3333; font-weight:bold;">:compile</span>, <span style="color:#ff3333; font-weight:bold;">:database</span>, <span style="color:#ff3333; font-weight:bold;">:create_views</span>, <span style="color:#ff3333; font-weight:bold;">:copy_to_temp</span>, <span style="color:#ff3333; font-weight:bold;">:compile_views</span>, <span style="color:#ff3333; font-weight:bold;">:unit_test</span>, <span style="color:#ff3333; font-weight:bold;">:integration_tests</span>, <span style="color:#ff3333; font-weight:bold;">:source_monitor</span><span style="color:#006600; font-weight:bold;">&#93;</span>
task <span style="color:#ff3333; font-weight:bold;">:fast</span> =<span style="color:#006600; font-weight:bold;">&amp;</span>gt; <span style="color:#006600; font-weight:bold;">&#91;</span><span style="color:#ff3333; font-weight:bold;">:compile</span>, <span style="color:#ff3333; font-weight:bold;">:unit_test</span><span style="color:#006600; font-weight:bold;">&#93;</span>
task <span style="color:#ff3333; font-weight:bold;">:rebuild_database</span> =<span style="color:#006600; font-weight:bold;">&amp;</span>gt; <span style="color:#006600; font-weight:bold;">&#91;</span><span style="color:#ff3333; font-weight:bold;">:create_database</span>, <span style="color:#ff3333; font-weight:bold;">:database</span>, <span style="color:#ff3333; font-weight:bold;">:create_views</span><span style="color:#006600; font-weight:bold;">&#93;</span>
&nbsp;
desc <span style="color:#996600;">&quot;Build solutions using MSBuild&quot;</span>
task <span style="color:#ff3333; font-weight:bold;">:compile</span>  <span style="color:#9966CC; font-weight:bold;">do</span>
  solutions = FileList<span style="color:#006600; font-weight:bold;">&#91;</span><span style="color:#996600;">&quot;#{SOURCE_PATH}/**/*.sln&quot;</span><span style="color:#006600; font-weight:bold;">&#93;</span>
  solutions.<span style="color:#9900CC;">each</span> <span style="color:#9966CC; font-weight:bold;">do</span> <span style="color:#006600; font-weight:bold;">|</span>solution<span style="color:#006600; font-weight:bold;">|</span>
    sh <span style="color:#996600;">&quot;#{DOT_NET_PATH}/msbuild.exe /p:Configuration=#{CONFIG} #{solution}&quot;</span>
  <span style="color:#9966CC; font-weight:bold;">end</span>
<span style="color:#9966CC; font-weight:bold;">end</span>
&nbsp;
desc <span style="color:#996600;">&quot;Running unit tests&quot;</span>
task <span style="color:#ff3333; font-weight:bold;">:unit_test</span> <span style="color:#9966CC; font-weight:bold;">do</span>
  <span style="color:#CC00FF; font-weight:bold;">Dir</span>.<span style="color:#9900CC;">glob</span><span style="color:#006600; font-weight:bold;">&#40;</span><span style="color:#996600;">&quot;#{SOURCE_PATH}/**/bin/#{CONFIG}/*.Fixture.dll&quot;</span><span style="color:#006600; font-weight:bold;">&#41;</span>.<span style="color:#9900CC;">each</span> <span style="color:#9966CC; font-weight:bold;">do</span> <span style="color:#006600; font-weight:bold;">|</span>f<span style="color:#006600; font-weight:bold;">|</span>
    sh <span style="color:#996600;">&quot;#{XUNIT_EXE} #{f}&quot;</span>
  <span style="color:#9966CC; font-weight:bold;">end</span>
<span style="color:#9966CC; font-weight:bold;">end</span>
&nbsp;
desc <span style="color:#996600;">&quot;Running integration tests&quot;</span>
task <span style="color:#ff3333; font-weight:bold;">:integration_tests</span> <span style="color:#9966CC; font-weight:bold;">do</span>
  <span style="color:#CC00FF; font-weight:bold;">Dir</span>.<span style="color:#9900CC;">glob</span><span style="color:#006600; font-weight:bold;">&#40;</span><span style="color:#996600;">&quot;#{SOURCE_PATH}/**/bin/#{CONFIG}/*.IntegrationTests.dll&quot;</span><span style="color:#006600; font-weight:bold;">&#41;</span>.<span style="color:#9900CC;">each</span> <span style="color:#9966CC; font-weight:bold;">do</span> <span style="color:#006600; font-weight:bold;">|</span>f<span style="color:#006600; font-weight:bold;">|</span>
    sh <span style="color:#996600;">&quot;#{XUNIT_EXE} #{f}&quot;</span>
  <span style="color:#9966CC; font-weight:bold;">end</span>
<span style="color:#9966CC; font-weight:bold;">end</span>
&nbsp;
desc <span style="color:#996600;">&quot;Create database&quot;</span>
task <span style="color:#ff3333; font-weight:bold;">:create_database</span> <span style="color:#9966CC; font-weight:bold;">do</span>
    sh <span style="color:#996600;">&quot;sqlcmd -S#{DATABASE_SERVER} -dmaster -b -i ..<span style="color:#000099;">\\</span>db<span style="color:#000099;">\\</span>CreateDatabaseAndUsers.sql&quot;</span>
<span style="color:#9966CC; font-weight:bold;">end</span>
&nbsp;
desc <span style="color:#996600;">&quot;Create database Views&quot;</span>
task <span style="color:#ff3333; font-weight:bold;">:create_views</span> <span style="color:#9966CC; font-weight:bold;">do</span>
    <span style="color:#CC00FF; font-weight:bold;">Dir</span>.<span style="color:#9900CC;">glob</span><span style="color:#006600; font-weight:bold;">&#40;</span><span style="color:#996600;">&quot;../db/views/*.sql&quot;</span><span style="color:#006600; font-weight:bold;">&#41;</span>.<span style="color:#9900CC;">each</span> <span style="color:#9966CC; font-weight:bold;">do</span> <span style="color:#006600; font-weight:bold;">|</span>f<span style="color:#006600; font-weight:bold;">|</span>
        sh <span style="color:#996600;">&quot;sqlcmd -S#{DATABASE_SERVER} -d#{DATABASE_NAME} -b -i #{f}&quot;</span>
    <span style="color:#9966CC; font-weight:bold;">end</span>
<span style="color:#9966CC; font-weight:bold;">end</span>
&nbsp;
desc <span style="color:#996600;">&quot;Update database&quot;</span>
task <span style="color:#ff3333; font-weight:bold;">:database</span> <span style="color:#9966CC; font-weight:bold;">do</span>
	sh <span style="color:#996600;">&quot;Tarantino.DatabaseManager.Console.exe Update #{DATABASE_SERVER} #{DATABASE_NAME} ..<span style="color:#000099;">\\</span>db&quot;</span>
<span style="color:#9966CC; font-weight:bold;">end</span>
&nbsp;
desc <span style="color:#996600;">&quot;Source monitor&quot;</span>
task <span style="color:#ff3333; font-weight:bold;">:source_monitor</span> <span style="color:#9966CC; font-weight:bold;">do</span>
	sh <span style="color:#996600;">&quot;SourceMonitor.exe /C SourceMonitor.xml&quot;</span>
<span style="color:#9966CC; font-weight:bold;">end</span>
&nbsp;
desc <span style="color:#996600;">&quot;Copy binaries to temp dir&quot;</span>
task <span style="color:#ff3333; font-weight:bold;">:copy_to_temp</span> <span style="color:#9966CC; font-weight:bold;">do</span>
  <span style="color:#CC00FF; font-weight:bold;">FileUtils</span>.<span style="color:#9900CC;">cp_r</span> <span style="color:#996600;">&quot;#{SOURCE_PATH}/CodicePlastico.####.Web/&quot;</span>, <span style="color:#996600;">&quot;#{DEPLOY_PATH}&quot;</span>
  <span style="color:#CC00FF; font-weight:bold;">FileUtils</span>.<span style="color:#9900CC;">rm_r</span> <span style="color:#CC00FF; font-weight:bold;">Dir</span>.<span style="color:#9900CC;">glob</span><span style="color:#006600; font-weight:bold;">&#40;</span><span style="color:#996600;">&quot;#{DEPLOY_PATH}/**/.svn&quot;</span><span style="color:#006600; font-weight:bold;">&#41;</span>
  <span style="color:#CC00FF; font-weight:bold;">FileUtils</span>.<span style="color:#9900CC;">rm_r</span> <span style="color:#CC00FF; font-weight:bold;">Dir</span>.<span style="color:#9900CC;">glob</span><span style="color:#006600; font-weight:bold;">&#40;</span><span style="color:#996600;">&quot;#{DEPLOY_PATH}/obj&quot;</span><span style="color:#006600; font-weight:bold;">&#41;</span>
  <span style="color:#CC00FF; font-weight:bold;">FileUtils</span>.<span style="color:#9900CC;">rm_r</span> <span style="color:#996600;">&quot;#{DEPLOY_PATH}/CodicePlastico.####.Web/obj&quot;</span>
  <span style="color:#CC00FF; font-weight:bold;">FileUtils</span>.<span style="color:#9900CC;">rm_r</span> <span style="color:#996600;">&quot;#{DEPLOY_PATH}/CodicePlastico.####.Web/Controllers&quot;</span>
  <span style="color:#CC00FF; font-weight:bold;">FileUtils</span>.<span style="color:#9900CC;">rm_r</span> <span style="color:#996600;">&quot;#{DEPLOY_PATH}/CodicePlastico.####.Web/Models&quot;</span>
  <span style="color:#CC00FF; font-weight:bold;">FileUtils</span>.<span style="color:#9900CC;">rm_r</span> <span style="color:#996600;">&quot;#{DEPLOY_PATH}/CodicePlastico.####.Web/Properties&quot;</span>
  <span style="color:#CC00FF; font-weight:bold;">FileUtils</span>.<span style="color:#9900CC;">rm_r</span> <span style="color:#996600;">&quot;#{DEPLOY_PATH}/CodicePlastico.####.Web/Services&quot;</span>
  <span style="color:#CC00FF; font-weight:bold;">FileUtils</span>.<span style="color:#9900CC;">rm_r</span> <span style="color:#CC00FF; font-weight:bold;">Dir</span>.<span style="color:#9900CC;">glob</span><span style="color:#006600; font-weight:bold;">&#40;</span><span style="color:#996600;">&quot;#{DEPLOY_PATH}/**/*.cs&quot;</span><span style="color:#006600; font-weight:bold;">&#41;</span>
  <span style="color:#CC00FF; font-weight:bold;">FileUtils</span>.<span style="color:#9900CC;">rm_r</span> <span style="color:#CC00FF; font-weight:bold;">Dir</span>.<span style="color:#9900CC;">glob</span><span style="color:#006600; font-weight:bold;">&#40;</span><span style="color:#996600;">&quot;#{DEPLOY_PATH}/**/*.csproj&quot;</span><span style="color:#006600; font-weight:bold;">&#41;</span>
  <span style="color:#CC00FF; font-weight:bold;">FileUtils</span>.<span style="color:#9900CC;">rm_r</span> <span style="color:#CC00FF; font-weight:bold;">Dir</span>.<span style="color:#9900CC;">glob</span><span style="color:#006600; font-weight:bold;">&#40;</span><span style="color:#996600;">&quot;#{DEPLOY_PATH}/**/*.user&quot;</span><span style="color:#006600; font-weight:bold;">&#41;</span>
  <span style="color:#CC00FF; font-weight:bold;">FileUtils</span>.<span style="color:#9900CC;">rm_r</span> <span style="color:#CC00FF; font-weight:bold;">Dir</span>.<span style="color:#9900CC;">glob</span><span style="color:#006600; font-weight:bold;">&#40;</span><span style="color:#996600;">&quot;#{DEPLOY_PATH}/**/Web.Debug.config&quot;</span><span style="color:#006600; font-weight:bold;">&#41;</span>
  <span style="color:#CC00FF; font-weight:bold;">FileUtils</span>.<span style="color:#9900CC;">rm_r</span> <span style="color:#CC00FF; font-weight:bold;">Dir</span>.<span style="color:#9900CC;">glob</span><span style="color:#006600; font-weight:bold;">&#40;</span><span style="color:#996600;">&quot;#{DEPLOY_PATH}/**/Web.Release.config&quot;</span><span style="color:#006600; font-weight:bold;">&#41;</span>
<span style="color:#9966CC; font-weight:bold;">end</span>
&nbsp;
desc <span style="color:#996600;">&quot;Build Views&quot;</span>
task <span style="color:#ff3333; font-weight:bold;">:compile_views</span>  <span style="color:#9966CC; font-weight:bold;">do</span>
    sh <span style="color:#996600;">&quot;#{DOT_NET_PATH}/aspnet_compiler -v / -p #{DEPLOY_PATH}/CodicePlastico.####.Web/&quot;</span>
<span style="color:#9966CC; font-weight:bold;">end</span></pre></div></div>

]]></content:encoded>
			<wfw:commentRss>http://blog.codiceplastico.com/ema/?feed=rss2&#038;p=17</wfw:commentRss>
		<slash:comments>4</slash:comments>
		</item>
		<item>
		<title>Ruby visto da un programmatore C# (pillole) [2]</title>
		<link>http://blog.codiceplastico.com/ema/?p=5</link>
		<comments>http://blog.codiceplastico.com/ema/?p=5#comments</comments>
		<pubDate>Sun, 08 May 2011 21:46:00 +0000</pubDate>
		<dc:creator>ema</dc:creator>
				<category><![CDATA[Ruby]]></category>
		<category><![CDATA[c#]]></category>

		<guid isPermaLink="false">/ema/post/2011/05/08/Ruby-visto-da-un-programmatore-C-(pillole)-2.aspx</guid>
		<description><![CDATA[Nel post precedente abbiamo visto come è possibile aggiungere un metodo ad una classe, nello stesso modo in cui abbiamo aggiunto il metodo lo possiamo anche rimuovere. Riprendendo l&#8217;esempio precedente: class Numeric   remove_method :to_money end stiamo rimuovendo il metodo to_money . Dopo questa rimozione se effettuiamo una chiamata al metodo come fatto la scorsa volta [...]]]></description>
			<content:encoded><![CDATA[<div>Nel post precedente abbiamo visto come è possibile aggiungere un metodo ad una classe, nello stesso modo in cui abbiamo aggiunto il metodo lo possiamo anche rimuovere.</div>
<div>Riprendendo l&#8217;esempio precedente:</div>
<pre>class Numeric</pre>
<pre>  remove_method :to_money</pre>
<pre>end</pre>
<div>stiamo rimuovendo il metodo to_money .</div>
<div>Dopo questa rimozione se effettuiamo una chiamata al metodo come fatto la scorsa volta otteniamo:</div>
<pre>NoMethodError: undefined method ‘to_money’ for 200:Fixnum</pre>
<div>Ossia il metodo to_money non esiste.</div>
<div>La stessa tecnica si può utilizzare per rimuovere qualsiasi metodo ad una classe:</div>

<div class="wp_syntax"><table><tr><td class="line_numbers"><pre>1
2
3
</pre></td><td class="code"><pre class="ruby" style="font-family:monospace;"><span style="color:#9966CC; font-weight:bold;">class</span> <span style="color:#CC00FF; font-weight:bold;">Object</span>
  remove_method <span style="color:#ff3333; font-weight:bold;">:to_s</span>
<span style="color:#9966CC; font-weight:bold;">end</span></pre></td></tr></table></div>

<div>In questo modo stiamo rimuovendo il metodo to_s (l&#8217;equivalente del ToString) a tutte le classi, visto che Object è la classe base di tutti gli oggetti ruby.</div>
<div>A cosa può servire rimuovere un metodo?</div>
<div>Secondo me può essere utile per evitare che certe operazioni su una classe vengano effettuare, in un SDK potremmo vietare certe operazioni.</div>
<div>Il metodo remove_method rimuove il metodo solo dalla classe corrente quindi a runtime verr&agrave; ricercato nelle super classi dell&#8217;istanza su cui viene chiamata.</div>
<div>Se vogliamo rimuovere il metodo da tutta la gerarchia possiamo usare il metodo undef_method che fa in modo che la classe non risponda più a quel metodo (e non effettui la ricerca nelle sue superclassi).</div>
]]></content:encoded>
			<wfw:commentRss>http://blog.codiceplastico.com/ema/?feed=rss2&#038;p=5</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Ruby visto da un programmatore C# (pillole)</title>
		<link>http://blog.codiceplastico.com/ema/?p=6</link>
		<comments>http://blog.codiceplastico.com/ema/?p=6#comments</comments>
		<pubDate>Tue, 19 Apr 2011 22:22:00 +0000</pubDate>
		<dc:creator>ema</dc:creator>
				<category><![CDATA[Ruby]]></category>

		<guid isPermaLink="false">/ema/post/2011/04/19/Ruby-visto-da-un-programmatore-C-(pillole).aspx</guid>
		<description><![CDATA[Come gi&#224; scritto in alcuni post precedenti, nell&#8217;ultimo anno mi sono interessato al linguaggio Ruby un po&#8217; per hobby e un po&#8217; per professione ci sto prendendo gusto.&#160;Volevo quindi raccontare in questo post e nei successivi quali sono le differenze rispetto a C# e mostrare alcune &#8220;stranezze&#8221; del linguaggio. Stranezze per chi &#232; abituato a [...]]]></description>
			<content:encoded><![CDATA[<p>Come gi&agrave; scritto in alcuni post precedenti, nell&#8217;ultimo anno mi sono interessato al linguaggio Ruby un po&#8217; per hobby e un po&#8217; per professione ci sto prendendo gusto.&nbsp;Volevo quindi raccontare in questo post e nei successivi quali sono le differenze rispetto a C# e mostrare alcune &#8220;stranezze&#8221; del linguaggio. Stranezze per chi &egrave; abituato a C#.</p>
<p>Ruby &egrave; un linguaggio ad oggetti come C# ma un po&#8217; pi&ugrave; ad oggetti rispetto a C#. In ruby tutto &egrave; un oggetto anche la definizione di una classe &egrave; un oggetto, anche nil (il null di C#) &egrave; un oggetto.&nbsp;</p>
<p>Inoltre, per la sua natura dinamica, un oggetto a differenza di C# pu&ograve; cambiare nel tempo, ossia posso aggiungere e rimuovere metodi ad un oggetto.</p>
<p>Facciamo un esempio: se io ho una classe Money cosi definita:</p>
<pre>
class Money
  def initialize(value)
    @value = value
  end
  def value
    @value
  end
end
</pre>
<p>L&#8217;istanza di questa classe rappresenta un importo in denaro.&nbsp;Sarebbe comodo ottenere un&#8217;istanza di Money in questo modo:</p>
<pre>
money = 100.to_money
</pre>
<p>Dove 100 in ruby &egrave; un&#8217;istanza di Numeric (classe del &#8220;framework&#8221; ruby).<br />Per farlo &egrave; necessario &#8220;aprire&#8221; la classe Numeric e aggiungere il metodo to_money in questo modo.</p>
<pre>
class Numeric
  def to_money
    Money.new(self)
  end
end
</pre>
<p>Dopo questa dichiarazione tutte le istanze di Numeric avranno un nuovo metodo to_money. La stessa cosa in C# si pu&ograve; fare con gli extension methods, dall&#8217;esterno l&#8217;usabilit&agrave; &egrave; simile ma converrete con me che in ruby &egrave; molto pi&ugrave; pulito e pi&ugrave; object oriented che in C#.</p>
]]></content:encoded>
			<wfw:commentRss>http://blog.codiceplastico.com/ema/?feed=rss2&#038;p=6</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
	</channel>
</rss>
